#include <stdio.h>
#include<stdlib.h>

struct node
{
    int value;
    struct node* next;
};

struct node* add_to_list(struct node* list, int n)
{
    struct node* new_node;

    new_node = malloc(sizeof(struct node));  
    if (new_node == NULL)
    {
        printf("Error: malloc failed in add_to_list\n");
        exit(EXIT_FAILURE);
    }
    new_node->value = n;
    new_node->next = list;

    return new_node;
}
void order_list(struct node *first) 
{
    struct node *current = first;
    int temp;
    
    for (; current != NULL; current = current->next) 
    {
        struct node *inner = first;
        for (; inner != NULL; inner = inner->next) 
        {
            if (current->value < inner->value) 
            {
                temp = current->value;
                current->value = inner->value;
                inner->value = temp;
            }
        }
    }

    current = first;
    while (current != NULL) {
        printf("%d ", current->value);
        current = current->next;
    }

    printf("\n");
}

struct node* delete_from_list(struct node*list,int n)
{
    struct node *cur,*prev;

    for(cur=list,prev=NULL;
        cur!=NULL&&cur->value!=n;
        prev=cur,cur=cur->next)
        ;
        if(cur==NULL)
        {
            return list;
        }
        if(prev==NULL)
        {
            list=list->next;
        }
        else
        {
            prev->next = cur->next;
        }

        free(cur);
        return list;
}

int main()
{
    struct node*first=NULL;
    struct node *p;
    int n;

     while (1)
    {
        scanf("%d", &n);
        if (n == 0)
            break;
        first = add_to_list(first, n);
    }

   order_list(first);
   return 0;
}

